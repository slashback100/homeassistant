shell_command:
  start_motion: ssh pi@cam 'sudo /usr/sbin/service motion start'
  stop_motion: ssh pi@cam 'sudo /usr/sbin/service motion stop'
  #  vol_minus: /opt/domo/modules/sendCommandAndroid.sh volminug
  #  vol_plus: /opt/domo/modules/sendCommandAndroid.sh volplus
  #  mel_home: /opt/domo/tools/melHomeOrNot home
  #  mel_not_home: /opt/domo/tools/melHomeOrNot not_home
  renew_ssl: ~/certbot/certbot-auto_v2 renew --quiet --no-self-upgrade --standalone --preferred-challenges http-01 --pre-hook "sudo systemctl stop home-assistant.service" --post-hook "sudo systemctl start home-assistant.service"
  tts_meteo_salon: /opt/domo/modules/tts.sh  "Actuellement, {{ states('sensor.meteo_summary') }}. Aujourd'hui, {{ states('sensor.meteo_summary_0d') }}, la température actuelle est de {{ state_attr('weather.dark_sky', 'temperature') | round(0) }} degré. La température minimale prévue est de {{ state_attr('weather.dark_sky', 'forecast')[1]['templow'] | round }} degrés et la température maximale de {{ state_attr('weather.dark_sky', 'forecast')[0]['temperature'] | round }} degrés. Il faut actuellement {{ states('sensor.home_medsoc') }} minutes pour aller à Wavre. Bonne journée !" salon
  tts_salon: /opt/domo/modules/tts.sh  "{{ states('input_text.text_for_tts') }}" salon
  tts_meteo_sdb: /opt/domo/modules/tts.sh  "Actuellement, {{ states('sensor.meteo_summary') }}. Aujourd'hui, {{ states('sensor.meteo_summary_0d') }}, la température actuelle est de {{ state_attr('weather.dark_sky', 'temperature') | round(0) }} degré. La température minimale prévue est de {{ state_attr('weather.dark_sky', 'forecast')[1]['templow'] | round }} degrés et la température maximale de {{ state_attr('weather.dark_sky', 'forecast')[0]['temperature'] | round }} degrés. Bonne journée !" sdb
  ringexthaut: /opt/domo/modules/ring.sh extHaut
  ringextbas: /opt/domo/modules/ring.sh extBas
  curl: >-
      /usr/bin/curl {{ args|default('-sS') }} -X {{ method|default('get')|upper }} {%- for k in headers %} -H "{{ k }}: {{ headers[k] }}"{% endfor %} {{- (' -d \'' ~ payload|tojson ~ '\'') if payload }} {{ url }} > {{ stream|default('/dev/null') }}
  youtubeonkodi: >-
      /opt/domo/tools/kodi-cli -k {{ states('input_select.kodi_ip') }} -s "{{ states('input_text.youtube_search_criteria') }}"
      # store id of the alarm 154b41e2 pour week, 6c069c8b pour ponctuel, xx pour days of
  change_week_alarm: >-
      /usr/bin/curl -H 'Content-Type: application/json' -X POST -d '{"id":0,"method":"slim.request","params":["b8:27:eb:17:f1:d0",["alarm","update","id:{{states('input_text.alarm_week_id')}}","enabled:1","time:{{(as_timestamp(strptime("01/01/1970 "~states('input_datetime.alarm_weekday')~" UTC", '%d/%m/%Y %H:%M:%S %Z')) +60*60)| int}}","dow:1,2,3,4,5","url:file:///mnt/extHdd/Playlist/RadioReveil.m3u","repeat:1"]]}' 'http://192.168.0.175:9000/jsonrpc.js'
  change_daysoff_alarm: >-
      /usr/bin/curl -H 'Content-Type: application/json' -X POST -d '{"id":0,"method":"slim.request","params":["b8:27:eb:17:f1:d0",["alarm","update","id:{{states('input_text.alarm_daysoff_id')}}","enabled:1","time:{{(as_timestamp(strptime("01/01/1970 "~states('input_datetime.alarm_daysoff')~" UTC", '%d/%m/%Y %H:%M:%S %Z')) +60*60)| int}}","dow:0,6","url:file:///mnt/extHdd/Playlist/RadioReveil.m3u","repeat:1"]]}' 'http://192.168.0.175:9000/jsonrpc.js'
  change_single_alarm: >-
      /usr/bin/curl -H 'Content-Type: application/json' -X POST -d '{"id":0,"method":"slim.request","params":["b8:27:eb:17:f1:d0",["alarm","update","id:{{states('input_text.alarm_single_id')}}","enabled:1","time:{{(as_timestamp(strptime("01/01/1970 "~states('input_datetime.alarm_single')~" UTC", '%d/%m/%Y %H:%M:%S %Z')) +60*60)| int}}","dow:0,1,2,3,4,5,6","url:file:///mnt/extHdd/Playlist/RadioReveil.m3u","repeat:0"]]}' 'http://192.168.0.175:9000/jsonrpc.js'

  disable_week_alarm: >-
      /usr/bin/curl -H 'Content-Type: application/json' -X POST -d '{"id":0,"method":"slim.request","params":["b8:27:eb:17:f1:d0",["alarm","update","id:{{states('input_text.alarm_week_id')}}","enabled:0"]]}' 'http://192.168.0.175:9000/jsonrpc.js'
  disable_daysoff_alarm: >-
      /usr/bin/curl -H 'Content-Type: application/json' -X POST -d '{"id":0,"method":"slim.request","params":["b8:27:eb:17:f1:d0",["alarm","update","id:{{states('input_text.alarm_daysoff_id')}}","enabled:0"]]}' 'http://192.168.0.175:9000/jsonrpc.js'
  disable_single_alarm: >-
      /usr/bin/curl -H 'Content-Type: application/json' -X POST -d '{"id":0,"method":"slim.request","params":["b8:27:eb:17:f1:d0",["alarm","update","id:{{states('input_text.alarm_single_id')}}","enabled:0"]]}' 'http://192.168.0.175:9000/jsonrpc.js'
  hyperion_remote: >-
      /usr/bin/hyperion-remote -a 192.168.0.205:19444 {{ states('input_text.hyperion_args') }}
  hyperion_nograbber_stop: >-
      ssh pi@192.168.0.205 'sudo service hyperion_nograbber stop'
  hyperion_nograbber_start: >-
      ssh pi@192.168.0.205 'sudo service hyperion_nograbber start'
  hyperion_stop: >-
      ssh pi@192.168.0.205 'sudo service hyperion stop'
  hyperion_start: >-
      ssh pi@192.168.0.205 'sudo service hyperion start'


  radio_of_title_add_salon: >-
      curl -H 'Content-Type: text/html; charset=utf-8' -X GET 'http://192.168.0.175:9000/songinfo.html?action=addall&index=5&player=b8%3A27%3Aeb%3Afa%3Af6%3Ab5&sess='$(curl -r -H "Content-Type: application/json"  -X POST -d '{"id":1,"method":"slim.request","params":["b8:27:eb:fa:f6:b5",["status","-",1]]}' "http://192.168.0.175:9000/jsonrpc.js" 2> /dev/null| jq -r ".result.playlist_loop[0].id")'&start='
  radio_of_title_play_salon: >-
      curl -H 'Content-Type: text/html; charset=utf-8' -X GET 'http://192.168.0.175:9000/songinfo.html?action=playall&index=5&player=b8%3A27%3Aeb%3Afa%3Af6%3Ab5&sess='$(curl -r -H "Content-Type: application/json"  -X POST -d '{"id":1,"method":"slim.request","params":["b8:27:eb:fa:f6:b5",["status","-",1]]}' "http://192.168.0.175:9000/jsonrpc.js" 2> /dev/null| jq -r ".result.playlist_loop[0].id")'&start='
