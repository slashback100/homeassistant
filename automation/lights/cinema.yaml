  - alias: SwitchCinema
    id: SwitchCinema
    use_blueprint:
        path: clicks.yaml
        input:
            switch_id: binary_sensor.cinema
            short_click_action:
              - service: light.toggle
                data:
                    entity_id: light.l_cinema_lampe
              - choose:
                  - conditions: "{{ is_state('light.l_cinema_lampe', 'on') and state_attr('light.l_cinema_lampe', 'brightness') | float < 20 }}"
                    sequence:
                      - service: light.turn_on
                        data:
                            entity_id: light.l_cinema_lampe
                            brightness: "{{ (0.40 * 255) | int }}"  #40%
            long_click_action:
              - choose: #si la lammpe n'est pas à 100% -> augmenter la luminosité
                  - conditions: "{{ state_attr('light.l_cinema_lampe', 'brightness') | float < 255 }}"
                    sequence:
                      - repeat:
                            sequence:
                              - service: light.turn_on
                                data:
                                  entity_id: light.l_cinema_lampe
                                  brightness_step_pct: 5
                              - delay: 0.2
                            until: #tant que le bouton est appuyé et la lampe pas encore à 100%
                              - condition: template
                                value_template: "{{ is_state('binary_sensor.cinema', 'off') or state_attr('light.l_cinema_lampe', 'brightness') | float == 255 }}"
                default: #sinon, baisser la luminosité 
                  - repeat:
                        sequence:
                          - service: light.turn_on
                            data:
                              entity_id: light.l_cinema_lampe
                              brightness_step_pct: -5
                          - delay: 0.2
                        until: #tant que le bouton est appuyé et la lampe pas encoe à 0%
                          - condition: template
                            value_template: "{{ is_state('binary_sensor.cinema', 'off') or state_attr('light.l_cinema_lampe', 'brightness') == None or state_attr('light.l_cinema_lampe', 'brightness') | float == 0 }}"
                  - choose:
                      - conditions: "{{ state_attr('light.l_cinema_lampe', 'brightness') == 0 or state_attr('light.l_cinema_lampe', 'brightness') == None }}"
                        sequence:
                          - service: light.turn_off
                            data:
                              entity_id: light.l_cinema_lampe
            double_click_action:
              - service: light.toggle
                entity_id: light.l_billard

  - alias: turnOnLightWhenStop
    id: turnOnLightWhenStop
    trigger:
      - platform: state
        entity_id: media_player.mediacenter_cinema
        from: "playing"
        #to: "idle"
    condition: "{{ is_state('light.l_cinema_lampe', 'off') }}"
    action:
      - service: python_script.light_transition
        data:
            entity_id: light.l_cinema_lampe
            end_level_pct: 40
            transition: "00:00:05"

  - alias: turnOffLightWhenPlay
    id: turnOffLightWhenPlay
    trigger:
      - platform: state
        entity_id: media_player.mediacenter_cinema
        #from: "idle"
        to: "playing"
    condition: "{{ is_state('light.l_cinema_lampe', 'on') }}"
    action:
      - service: python_script.light_transition
        data:
            entity_id: light.l_cinema_lampe
            end_level_pct: 0
            transition: "00:00:05"
