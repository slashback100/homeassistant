  - alias: SwitchCinema
    id: SwitchCinema
    use_blueprint:
        path: clicks.yaml
        input:
            switch_id: binary_sensor.cinema
            short_click_action:
              - service: light.toggle
                data:
                    entity_id: light.l_cinema_lampe
              - choose:
                  - conditions: "{{ is_state('light.l_cinema_lampe', 'on') and state_attr('light.l_cinema_lampe', 'brightness') | float < 20 }}"
                    sequence:
                      - service: light.turn_on
                        data:
                            entity_id: light.l_cinema_lampe
                            brightness: "{{ (0.40 * 255) | int }}"  #40%
            long_click_action:
              - service: script.dim_light
                data: 
                  light: light.l_cinema_lampe
                  button: binary_sensor.cinema
            double_click_action:
              - if: "{{ is_state('light.l_billard_spots', 'off')}}"
                then:
                  - service: light.turn_on
                    entity_id: 
                      - light.l_bar
                      - light.wled_billard
                      - light.wled_bar
                      - light.l_billard_spots
                else:
                  - service: light.turn_off
                    entity_id: 
                      - light.l_billard
                      - light.l_bar
                      - light.wled_billard
                      - light.wled_bar
                      - light.l_billard_spots

  - alias: turnOnLightWhenStop
    id: turnOnLightWhenStop
    trigger:
      - platform: state
        entity_id: media_player.kodi_d2adb85b2731c0915692365c58375a6a
        from: "playing"
        #to: "idle"
    condition: "{{ is_state('light.l_cinema_lampe', 'off') }}"
    action:
      - service: python_script.light_transition
        data:
            entity_id: light.l_cinema_lampe
            end_level_pct: 40
            transition: "00:00:05"

  - alias: turnOffLightWhenPlay
    id: turnOffLightWhenPlay
    trigger:
      - platform: state
        entity_id: media_player.kodi_d2adb85b2731c0915692365c58375a6a
        #from: "idle"
        to: "playing"
    condition: "{{ is_state('light.l_cinema_lampe', 'on') }}"
    action:
      - service: python_script.light_transition
        data:
            entity_id: light.l_cinema_lampe
            end_level_pct: 0
            transition: "00:00:05"
